global white = Materials.uniform([ "ambient": Colors.white() ])
global black = Materials.uniform([ "ambient": Colors.black() ])

def material(pattern)
{
  Materials.from_pattern(pattern, white, black)
}

def scene_at(now)
{
  var camera = Cameras.perspective( [ "eye": pos(0, 5, 8),
                                      "look_at": pos(0,0,0) ] )


  var t = Animations.animate(0, 1, seconds(5))[now]
  var pattern = Patterns.lines(0.04, 0.08)

  var root = union( [
  	decorate(
          material(Patterns.rotate(degrees(360 * t), pattern)),
          sphere()),
  	decorate(
          material(Patterns.translate(vec(t, t), pattern)),
          translate(vec(-3, 0, 0), sphere())),
  	decorate(
          material(Patterns.scale(5*t+1, 5*t+1, pattern)),
          translate(vec(3, 0, 0), sphere()))
  ] )

  var lights = [ Lights.omnidirectional( pos(0,5,2), Colors.white() ) ]

  create_scene(camera, root, lights)
}


var raytracer   = Raytracers.v6()
var renderer    = Renderers.standard( [ "width": 500,
                                        "height": 500,
                                        "sampler": Samplers.single(),
                                        "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.studio() ] )